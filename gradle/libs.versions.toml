[versions]
kotlin = "2.0.21"
kotlinx-json = "1.7.2"
kotlinx-coroutines = "1.9.0"
kotlinx-datetime = "0.6.1"
kotest = "5.9.1"
spring-boot = "3.4.0"
spring = "6.2.0"
kotlinter = "4.1.1"
arrow = "1.2.4"
kotlin-jdsl = "3.5.3"
jooq-gradle = "8.2.3"
jooq = "3.19.13"
test-container = "1.20.4"
mockk = "1.13.10"
r2dbc = "1.0.1.RELEASE"
jjwt = "0.12.6"
apache-poi = "5.2.5"
jackson = "2.18.2"

[libraries]
#Kotlin
kotlin-reflect = { group = "org.jetbrains.kotlin", name = "kotlin-reflect", version.ref = "kotlin" }
kotlinx-datetime = { group = "org.jetbrains.kotlinx", name = "kotlinx-datetime", version.ref = "kotlinx-datetime" }
kotlinx-coroutines-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-reactor = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-reactor", version.ref = "kotlinx-coroutines" }
kotlinx-serialization-json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "kotlinx-json" }

# Base library
apache-commons-logging = { group = "commons-logging", name = "commons-logging", version = "1.2" }
arrow-core = { group = "io.arrow-kt", name = "arrow-core", version.ref = "arrow" }
arrow-jackson-module = { group = "io.arrow-kt", name = "arrow-integrations-jackson-module", version = "0.15.1" }
jwt = { group = "com.auth0", name = "java-jwt", version = "4.5.0" }
slf4j = { group = "org.slf4j", name = "slf4j-api", version = "2.0.3" }
logback-classic = { group = "ch.qos.logback", name = "logback-classic", version = "1.4.14" }
logback-core = { group = "ch.qos.logback", name = "logback-core", version = "1.4.14" }

# Spring Boot
spring-boot-core = { group = "org.springframework.boot", name = "spring-boot-starter", version.ref = "spring-boot" }
spring-boot-configuration-processor = { group = "org.springframework.boot", name = "spring-boot-configuration-processor", version.ref = "spring-boot" }
spring-boot-test = { group = "org.springframework.boot", name = "spring-boot-starter-test", version.ref = "spring-boot" }
spring-boot-actuator = { group = "org.springframework.boot", name = "spring-boot-starter-actuator", version.ref = "spring-boot" }
spring-boot-quartz = { group = "org.springframework.boot", name = "spring-boot-starter-quartz", version.ref = "spring-boot" }
spring-boot-batch = { group = "org.springframework.boot", name = "spring-boot-starter-batch", version.ref = "spring-boot" }
spring-boot-webflux = { group = "org.springframework.boot", name = "spring-boot-starter-webflux", version.ref = "spring-boot" }
spring-boot-aop = { group = "org.springframework.boot", name = "spring-boot-starter-aop", version.ref = "spring-boot" }
spring-boot-mvc = { group = "org.springframework.boot", name = "spring-boot-starter-web", version.ref = "spring-boot" }
spring-boot-security = { group = "org.springframework.boot", name = "spring-boot-starter-security", version.ref = "spring-boot" }
spring-boot-devtools = { group = "org.springframework.boot", name = "spring-boot-devtools", version.ref = "spring-boot" }
spring-boot-data-jpa = { group = "org.springframework.boot", name = "spring-boot-starter-data-jpa", version.ref = "spring-boot" }
spring-boot-data-mongodb = { group = "org.springframework.boot", name = "spring-boot-starter-data-mongodb", version.ref = "spring-boot" }
spring-boot-data-redis = { group = "org.springframework.boot", name = "spring-boot-starter-data-redis", version.ref = "spring-boot" }
spring-boot-testcontainers = { group = "org.springframework.boot", name = "spring-boot-testcontainers", version.ref = "spring-boot" }

# Spring Data
spring-data-core = { module = "org.springframework.data:spring-data-commons", version.ref = "spring-boot" }
spring-data-envers = { module = "org.springframework.data:spring-data-envers", version.ref = "spring-boot" }

# Spring Security
spring-security-crypto = { group = "org.springframework.security", name = "spring-security-crypto", version = "6.4.1" }
bouncycastle-crypto = { group = "org.bouncycastle", name = "bcpkix-jdk18on", version = "1.79" }

# Spring Framework
spring-aspects = { group = "org.springframework", name = "spring-aspects", version.ref = "spring" }
spring-tx = { group = "org.springframework", name = "spring-tx", version.ref = "spring" }
spring-kafka = { group = "org.springframework.kafka", name = "spring-kafka" }

# Spring Etc
spring-mockk = { group = "com.ninja-squad", name = "springmockk", version = "4.0.2" }

# Persistence
jpa = { module = "jakarta.persistence:jakarta.persistence-api", version = "3.2.0" }
hypersistence-utils = { module = "io.hypersistence:hypersistence-utils-hibernate-63", version = "3.9.0" }

# Query
kotlin-jdsl-jpql-dsl = { group = "com.linecorp.kotlin-jdsl", name = "jpql-dsl", version.ref = "kotlin-jdsl" }
kotlin-jdsl-jpql-render = { group = "com.linecorp.kotlin-jdsl", name = "jpql-render", version.ref = "kotlin-jdsl" }
kotlin-jdsl-spring-data-jpa-support = { group = "com.linecorp.kotlin-jdsl", name = "spring-data-jpa-support", version.ref = "kotlin-jdsl" }
kotlin-jdsl-spring-batch-support = { group = "com.linecorp.kotlin-jdsl", name = "spring-batch-support", version.ref = "kotlin-jdsl" }

jooq = { module = "org.jooq:jooq", version.ref = "jooq" }
jooq-kotlin = { module = "org.jooq:jooq-kotlin", version.ref = "jooq" }
jooq-coroutine = { module = "org.jooq:jooq-kotlin-coroutines", version.ref = "jooq" }

# Database
mariadb = { module = "org.mariadb.jdbc:mariadb-java-client" }
mongodb = { module = "org.mongodb:mongodb-jdbc", version = "2.2.0" }


r2dbc-postgresql = { module = "org.postgresql:r2dbc-postgresql", version.ref = "r2dbc" }
r2dbc-mysql = { module = "io.asyncer:r2dbc-mysql", version = "1.0.4" }
r2dbc-mariadb = { module = "org.mariadb:r2dbc-mariadb", version = "1.2.2" }
r2dbc-pool = { module = "io.r2dbc:r2dbc-pool", version.ref = "r2dbc" }

redis = { module = "org.springframework.boot:spring-boot-starter-data-redis", version = "3.2.4" }
redis-lettuce = { module = "io.lettuce:lettuce-core", version = "6.5.1.RELEASE" }
redis-redisson = { module = "org.redisson:redisson", version = "3.44.0" }
redis-redisson-spring-boot-starter = { module = "org.redisson:redisson-spring-boot-starter", version = "3.44.0" }

# Utils
ulid = { module = "com.aallam.ulid:ulid-kotlin", version = "1.3.0" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }
jackson-datatype-jdk8 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jdk8", version.ref = "jackson" }
jackson-datatype-jsr310 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", version.ref = "jackson" }
jackson-module-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson" }
apache-commons-compress = { module = "org.apache.commons:commons-compress", version = "1.26.0" }
apache-poi = { module = "org.apache.poi:poi", version.ref = "apache-poi" }
apache-poi-ooxml = { module = "org.apache.poi:poi-ooxml", version.ref = "apache-poi" }
prometheus = { group = "io.micrometer", name = "micrometer-registry-prometheus" }

jjwt-api = { module = "io.jsonwebtoken:jjwt-api", version.ref = "jjwt" }
jjwt-impl = { module = "io.jsonwebtoken:jjwt-impl", version.ref = "jjwt" }
jjwt-jackson = { module = "io.jsonwebtoken:jjwt-jackson", version.ref = "jjwt" }

# Test
kotest-framework-datatest = { group = "io.kotest", name = "kotest-framework-datatest", version.ref = "kotest" }
kotest-framework-api = { group = "io.kotest", name = "kotest-framework-api", version.ref = "kotest" }
kotest-property = { group = "io.kotest", name = "kotest-property", version.ref = "kotest" }
kotest-runner-junit5 = { group = "io.kotest", name = "kotest-runner-junit5", version.ref = "kotest" }
kotest-assertions-core = { group = "io.kotest", name = "kotest-assertions-core", version.ref = "kotest" }
kotest-assertions-arrow = { group = "io.kotest.extensions", name = "kotest-assertions-arrow", version = "1.4.0" }
kotest-extensions-spring = { group = "io.kotest.extensions", name = "kotest-extensions-spring", version = "1.3.0" }
kotest-extensions-testcontainers = { group = "io.kotest.extensions", name = "kotest-extensions-testcontainers", version = "2.0.2" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
flyway-core = { module = "org.flywaydb:flyway-core", version = "10.4.1" }
flyway-mysql = { module = "org.flywaydb:flyway-mysql", version = "10.4.1" }
mariadb-client = { module = "org.mariadb.jdbc:mariadb-java-client", version = "3.4.1" }
zaxxer-hikaricp = { module = "com.zaxxer:HikariCP", version = "2.2.5" }
testcontainers = { module = "org.testcontainers:testcontainers", version.ref = "test-container" }
testcontainers-mariadb = { module = "org.testcontainers:mariadb", version.ref = "test-container" }
testcontainers-mongodb = { module = "org.testcontainers:mongodb", version.ref = "test-container" }
apache-configuration2 = { module = "org.apache.commons:commons-configuration2", version = "2.11.0" }
snakeyaml = { module = "org.yaml:snakeyaml", version = "2.2" }

[plugins]
java-test-fixtures = { id = "java-test-fixtures" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-allopen = { id = "org.jetbrains.kotlin.plugin.allopen", version.ref = "kotlin" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
kotlin-jpa = { id = "org.jetbrains.kotlin.plugin.jpa", version.ref = "kotlin" }
kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }

spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
spring-dep-management = { id = "io.spring.dependency-management", version = "1.1.4" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version = "12.1.2" }
kotlinter = { id = "org.jmailen.kotlinter", version.ref = "kotlinter" }

jooq = { id = "nu.studer.jooq", version.ref = "jooq-gradle" }

flyway-gradle = { id = "org.flywaydb.flyway", version = "9.8.1" }

java = { id = "java" }
java-library = { id = "java-library" }
maven-publish = { id = "maven-publish" }

[bundles]
kotest = ["kotest-runner-junit5", "kotest-assertions-core", "kotest-property", "kotest-assertions-arrow"]
jooq = ["jooq", "jooq-kotlin", "jooq-coroutine"]
